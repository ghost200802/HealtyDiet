1.随机生成食物及重量列表
    - 输入数据来源：
      * FoodTypes.json：包含所有可用食物及其分类信息
      * DailyNeeds.json：包含每日营养需求标准数据
    - 生成逻辑：
      * 按食物类别分组，根据DailyNeeds.json中的数据，为每个下限>0的子类别随机分配一个食物
      * 将每个子类别的食物重量设置为随机的下限
      * 随机每个大类别的总重量
      * 根据大类别的总重量，将剩余的重量随机分配给大类别下，还没有达到随机上限的子类别
      * 所有的随机和调整都以10g为最小改变

2.根据已经生成的食物及重量列表，结合用户的数据进行重量优化（每次调整变化为10g）
    优化目标包括：
    - 能量需求匹配（20%）
    - 三大营养素（蛋白质、脂肪、碳水化合物）及纤维素需求匹配（各15%，共60%）
    - 不超过DailyNeeds.json中大项的上下限约束（20%）
    
    优化算法：
    - 采用迭代优化方法，最多100次迭代
    - 每次调整10g食物重量
    - 保留最佳得分食谱
    - 最终返回最佳得分食谱而非当前食谱